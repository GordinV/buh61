Lparameters tnId
Local lError
Set Textmerge On

cIds = ''
*!*	Test()
*!*	RETURN



If !Empty(tnId)
	cIds = Str(tnId)
Else
	If Used('curArved')
		Select curArved
		Scan For !Empty(curArved.valitud)
			If Len(cIds) > 1
				cIds = cIds + ','
			Endif

			cIds = cIds + Alltrim(Str(curArved.Id))
		Endscan
	Endif

Endif

*!*	gRekv = 119
cFail = 'c:\temp\buh60\EDOK\earved.xml'
cFailbak = 'c:\temp\buh60\EDOK\'+Alltrim(Str(grekv))+'earved'+Sys(2015)+'.bak'

If !Directory(Justpath(cFail))
	Mkdir(Justpath(cFail))
Endif

If File (cFailbak)
	Erase (cFailbak)
Endif
If File(cFail)
	Rename (cFail) To (cFailbak)
Endif

=execute()

If !File(cFail)
	cFail = ''
Endif

Return cFail


Function execute
	Local laAddress[3]
TEXT TO lcString noshow
		select arv.*, case when arv.liik = 0 then a.regkood else rtrim(LTRIM(a.regkood)) end as regkood ,
			CASE when arv.liik = 0 then coalesce(rekv.muud,rekv.nimetus) else rtrim(LTRIM(a.nimetus)) || ' ' || rtrim(a.omvorm) end::varchar as muuja,
			CASE when arv.liik = 1 then coalesce(rekv.muud,rekv.nimetus) else rtrim(LTRIM(a.nimetus)) || ' ' || rtrim(a.omvorm) end::varchar as ostja,
			CASE when arv.liik = 0 then rekv.regkood else rtrim(LTRIM(a.regkood))  end as muuja_regkood,
			CASE when arv.liik = 0 then rekv.aadress else rtrim(LTRIM(a.aadress))  end as muuja_aadress,
			CASE when arv.liik = 0 then rekv.email else rtrim(LTRIM(a.email))  end as muuja_email,
			CASE when arv.liik = 0 then rekv.tel else rtrim(LTRIM(a.tel))  end as muuja_tel,
			CASE when arv.liik = 1 then rekv.regkood else rtrim(LTRIM(a.regkood))  end as ostja_regkood,
			a.aadress, a.email,
			(select arve from aa where parentId = rekv.id and default_ = 1 and not empty(pank) and kassa = 1 order by id desc limit 1)::varchar as arve,
			arv.lisa
			from arv
			inner join asutus a on a.id = arv.asutusId
			inner join rekv on arv.rekvId = rekv.id
			where arv.rekvId = ?gRekv
ENDTEXT

	lcString = lcString + ' and arv.id in (' + cIds + ') order by kpv, number, id '


	lnError = SQLEXEC(gnhandle,lcString,'qryeArved')
	If lnError < 0
		_Cliptext = lcString
		Set Step On
	Endif

	lcKpv = Str(Year(Date()),4) + '-'+;
		IIF(Month(Date())<10,'0','') + Alltrim(Str(Month(Date()),2))+'-'+;
		IIF(Day(Date())<10,'0','')+Alltrim(Str(Day(Date()),2))


TEXT TO lcFileString NOSHOW
<?xml version="1.0" encoding="UTF-8"?>
<E_Invoice>
<Header>
<Date><<lcKpv>></Date>
<FileId>1</FileId>
<AppId>EARVE</AppId>
<Version>1.1</Version>
</Header>

ENDTEXT

	Select qryeArved
	Scan

		lcKpv = Str(Year(qryeArved.kpv),4) + '-'+;
			IIF(Month(qryeArved.kpv)<10,'0','') + Alltrim(Str(Month(qryeArved.kpv),2))+'-'+;
			IIF(Day(qryeArved.kpv)<10,'0','')+Alltrim(Str(Day(qryeArved.kpv),2))

		lcTKpv = ''
		If !Empty(qryeArved.tahtaeg)
			lcTKpv = Str(Year(qryeArved.tahtaeg),4) + '-'+;
				IIF(Month(qryeArved.tahtaeg)<10,'0','') + Alltrim(Str(Month(qryeArved.tahtaeg),2))+'-'+;
				IIF(Day(qryeArved.tahtaeg)<10,'0','')+Alltrim(Str(Day(qryeArved.tahtaeg),2))
		ENDIF
		
		laAddress = getAddress(qryeArved.aadress)
		lcCity = getAddress(qryeArved.aadress, 3)
		lcPost = getAddress(qryeArved.aadress, 1)
		la_muuja_Address = getAddress(qryeArved.muuja_aadress)
		lc_muuja_City = getAddress(qryeArved.muuja_aadress, 3)
		lc_muuja_Post = getAddress(qryeArved.muuja_aadress, 1)


TEXT TO lcFileString ADDITIVE NOSHOW

<Invoice invoiceId="<<Alltrim(convert_to_utf(qryeArved.Number))>>" regNumber="<<Alltrim(qryeArved.regkood)>>">
<InvoiceParties>
<SellerParty>
<Name><<Alltrim(convert_to_utf(qryeArved.muuja))>></Name>
<RegNumber><<Alltrim(qryeArved.muuja_regkood)>></RegNumber>
<ContactData>
<PhoneNumber><<qryeArved.muuja_tel>></PhoneNumber>
<LegalAddress>
<PostalAddress1><<Alltrim(convert_to_utf(lc_muuja_Post))>></PostalAddress1>
<City><<ALLTRIM(convert_to_utf(lc_muuja_City))>></City>
</LegalAddress>
</ContactData>
</SellerParty>
<BuyerParty>
<Name><<Alltrim(convert_to_utf(qryeArved.ostja))>></Name>
<RegNumber><<Alltrim(qryeArved.ostja_regkood)>></RegNumber>
<ContactData>
<E-mailAddress><<Alltrim(convert_to_utf(qryeArved.email))>></E-mailAddress>
<LegalAddress>
<PostalAddress1><<Alltrim(convert_to_utf(lcPost))>></PostalAddress1>
<City><<ALLTRIM(convert_to_utf(lcCity))>></City>
</LegalAddress>
</ContactData>
</BuyerParty>
</InvoiceParties>
<InvoiceInformation>
<Type type="DEB"/>
<DocumentName>Arve</DocumentName>
<InvoiceNumber><<Alltrim(convert_to_utf(qryeArved.Number))>></InvoiceNumber>
<InvoiceDate><<lcKpv>></InvoiceDate>
</InvoiceInformation>
<InvoiceSumGroup>
<InvoiceSum><<Alltrim(Str(qryeArved.Summa,14,2))>></InvoiceSum>
<VAT>
ENDTEXT

TEXT TO lcString noshow
			select (case n.doklausid when 0 then 18 when 1 then 0 when 2 then 5 when 3 then 0 when 4 then 9 else 20 end::numeric) as vatRate,
				sum(kbm) as vatSum, n.doklausid, arv1.parentId, sum(summa) as summa
				from arv1
				inner join nomenklatuur n on n.id = arv1.nomid
				where arv1.parentId = ?qryeArved.id
				group by n.doklausid, arv1.parentId
ENDTEXT
		lnError = SQLEXEC(gnhandle,lcString,'qryeArvedVat')
		If lnError < 0
			Set Step On
			Exit
		Endif

TEXT TO lcString noshow
			select
				case n.doklausid when 0 then 18 when 1 then 0 when 2 then 5 when 3 then 0 when 4 then 9 else 20 end as vatRate,
				arv1.parentId,	arv1.kbm as vat_summa,
				n.doklausid, ltrim(rtrim(n.nimetus)) || ' ' || ltrim(rtrim(coalesce(arv1.muud,''))) as Description,n.uhik as ItemUnit,
				arv1.kogus as ItemAmount, arv1.hind as ItemPrice, (arv1.summa - arv1.kbm) as ItemSum, arv1.kbm as VATSum, arv1.summa as ItemTotal
				from arv1
				inner join nomenklatuur n on n.id = arv1.nomid
				where arv1.parentId = ?qryeArved.id
ENDTEXT
		lnError = SQLEXEC(gnhandle,lcString,'qryeArvedDet')
		If lnError < 0
			Set Step On
			Exit
		Endif
		If Used('qryeArvedDet')
			lcFileString= lcFileString  + create_details()
		Endif

TEXT TO lcFileString ADDITIVE NOSHOW

</InvoiceItemGroup>
</InvoiceItem>

ENDTEXT
l_tahtaeg = ALLTRIM(STR(YEAR(qryeArved.tahtaeg))) + '-' + ALLTRIM(STR(MONTH(qryeArved.tahtaeg))) + '-' + ALLTRIM(STR(DAY(qryeArved.tahtaeg)))

TEXT TO lcFileString ADDITIVE NOSHOW
<PaymentInfo>
<Currency>EUR</Currency>
<PaymentRefId></PaymentRefId>
<PaymentDescription>Arve <<convert_to_utf(qryeArved.Number)>></PaymentDescription>
<Payable>YES</Payable>
<PayDueDate><<l_tahtaeg>></PayDueDate> 
<PaymentTotalSum><<Alltrim(Str(qryeArved.Summa,14,2))>></PaymentTotalSum>
<PayerName><<Alltrim(convert_to_utf(qryeArved.ostja)) >></PayerName>
<PaymentId><<ALLTRIM(convert_to_utf(qryeArved.number))>></PaymentId>
<PayToAccount><<ALLTRIM(qryeArved.arve)>></PayToAccount>
<PayToName><<ALLTRIM(convert_to_utf(qryeArved.muuja))>></PayToName>
</PaymentInfo>
</Invoice>

ENDTEXT

IF !ISNULL(qryeArved.muud) AND !EMPTY(qryeArved.muud)
TEXT TO lcFileString ADDITIVE NOSHOW
<AdditionalInformation id  ="  Note">  
<InformationName> Märkus </InformationName><InformationContent><<ALLTRIM(qryeArved.muud)>></InformationContent>
</AdditionalInformation>
	
ENDTEXT

ENDIF


*	lcString = ALLTRIM(lcString)


	Endscan
	Select qryeArved
	Sum Summa To lnTotalSumma


TEXT TO lcFileString ADDITIVE NOSHOW

<Footer>
<TotalNumberInvoices><<Alltrim(Str(Reccount('qryeArved')))>></TotalNumberInvoices>
<TotalAmount><<Alltrim(Str(lnTotalSumma,14,2))>></TotalAmount>
</Footer>
</E_Invoice>
ENDTEXT


	Strtofile(lcFileString, cFail, 4)
	Return File(cFail)
Endfunc




Function test
	grekv = 119

	gnhandle = SQLConnect('NarvaLvPg')
	If gnhandle < 0
		Set Step On
	Endif
	cIds = '354150'
	=execute()

	SQLDISCONNECT(gnhandle)

Endfunc



Function create_details
	Local lcString, lnSummaKokku, lcIsoKpv, lcPankIban, lcTKpv, lcKpv
	lcString = ''

* koguneme kaibemaksu summad

	Select qryeArvedVat
	Scan
TEXT TO lcString ADDITIVE NOSHOW

<SumBeforeVAT><<Alltrim(Str(qryeArvedVat.summa - qryeArvedVat.vatSum, 14,2))>></SumBeforeVAT>
<VATRate><<Alltrim(Str(qryeArvedVat.vatRate))>></VATRate>
<VATSum><<Alltrim(Str(qryeArvedVat.vatSum,14,2))>></VATSum>
<Currency>EUR</Currency>
<SumAfterVAT><<Alltrim(Str(qryeArvedVat.summa,14,2))>></SumAfterVAT>
ENDTEXT

	Endscan
TEXT TO lcString ADDITIVE NOSHOW

</VAT>
<TotalSum><<Alltrim(Str(qryeArved.Summa,14,2))>></TotalSum>
<Currency>EUR</Currency>
</InvoiceSumGroup>
<InvoiceItem>
<InvoiceItemGroup>

ENDTEXT

	Select qryeArvedDet
	Scan
TEXT TO lcString ADDITIVE NOSHOW

<ItemEntry>
<Description><<Alltrim(convert_to_utf(ALLTRIM(qryeArvedDet.Description) + ', ' + ALLTRIM(qryeArved.lisa)))>></Description>
<ItemDetailInfo>
<ItemUnit><<Alltrim(qryeArvedDet.ItemUnit)>></ItemUnit>
<ItemAmount><<Alltrim(Str(qryeArvedDet.ItemAmount,14,4))>></ItemAmount>
<ItemPrice><<Alltrim(Str(qryeArvedDet.itemPrice,14,2))>></ItemPrice>
</ItemDetailInfo>
<ItemSum><<Alltrim(Str(qryeArvedDet.itemSum,14,2))>></ItemSum>
<VAT>
<SumBeforeVAT><<Alltrim(Str(qryeArvedDet.ItemSum, 14,2))>></SumBeforeVAT>
<VATRate><<Alltrim(Str(qryeArvedDet.vatRate))>></VATRate>
<VATSum><<Alltrim(Str(qryeArvedDet.vatSum,14,2))>></VATSum>
<Currency>EUR</Currency>
</VAT>
<ItemTotal><<Alltrim(Str(qryeArvedDet.itemTotal,14,2))>></ItemTotal>
</ItemEntry>
ENDTEXT

	Endscan

*	Copy Memo tmpMk.iso To (cFail)
	Return lcString
*	Return File(cFail)
Endfunc


Function getAddress(tcAadress, Index)
	Local lcString, laAddress[10], returnAadress[3], lcIndex, lcLinn, lcPost
	lcIndex = ''
	lcLinn = ''

	If !Used('qryCities')
		TEXT TO lcString noshow
			SELECT DISTINCT nimetus FROM library WHERE  library = 'LINNAD'
		ENDTEXT
		lnError = SQLEXEC(gnhandle, lcString, 'qryCities')
	Endif


	Select qryCities

	nRows = Alines(laAddress, Strtran(tcAadress,",",Chr(13)))

	For i = 1 To nRows
		If Len(Alltrim(laAddress[i]))  = 5 And Isdigit(Alltrim(laAddress[i]))
			lcIndex = laAddress[i]
		Endif

		Select nimetus From qryCities Where Upper(Alltrim(nimetus)) = Upper(Alltrim(laAddress[i])) Into Cursor qryTmp

		If Reccount('qryTmp') > 0
			lcLinn = laAddress[i]
		Endif
		Use In qryTmp
	Endfor

	lcPost = ''
	For i = 1 To nRows
		If Alltrim(laAddress[i]) <> Alltrim(lcIndex) And Alltrim(Upper(laAddress[i])) <> Alltrim(Upper(lcLinn))
			lcPost = lcPost + Iif(i > 1, ', ','') + laAddress[i]
		Endif
	Endfor

	If Empty(lcLinn)
		lcLinn = laAddress[nRows]
	Endif

	returnAadress[1] = lcPost
	returnAadress[2] = lcIndex
	returnAadress[3] = lcLinn

	Return returnAadress[index]
Endfunc


Function test
	grekv = 119
	gnhandle = SQLConnect('NarvaLvPg','vlad','Vlad490710')
	getAddress('rahu 15, Narva, 29024')

Endfunc
